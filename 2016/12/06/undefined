<html>
    <!DOCTYPE html>
<html lang="zh">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">

	

	<title>Python Flask Google App Engine允许Access-Control-Allow-Origin跨域访问 | akakanch</title>
	<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1">
	<link rel="shortcut icon" href="/favicon.ico">	
	<link rel="stylesheet" href="/css/bootstrap.min.css">
	<link rel="stylesheet" href="/css/caomei.css">
	<link rel="stylesheet" href="/css/style.css">
	<script async src="//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"></script>
</head>

    <body>
        <div class="root">
            <div class='topnavs container fixed-690'>
    <nav class="navbar navbar-expand-lg navbar-light">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
            aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                
                    <li class="nav-item">
                        <a class="nav-link" href="/">
                            首页
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/categories">
                            分类
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/archives">
                            归档
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/tags">
                            标签
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/about">
                            关于
                        </a>
                    </li>
                    
            </ul>
        </div>
    </nav>
</div>
                <section class="container mainbody fixed-690">
                    <div class="post">
    <div class="post-title">
        <h1>
            Python Flask Google App Engine允许Access-Control-Allow-Origin跨域访问 
        </h1>

        
        <div class="post-title-views">
            <span id="busuanzi_container_page_pv">
                本文总阅读量 <span id="busuanzi_value_page_pv"></span> 次
            </span>
        </div>
        
    </div>
    <div class="post-content markdown">
        <p>最近在做一个纯API接口，部署到Google App Engine上面（为了利用GAE的负载均衡，减少服务器压力）。</p>
<p>最后在另外一台服务器上调用的时候，却无法正确获取数据，提示错误如下：</p>
<p><strong><span style="color: #ff0000;">XMLHttpRequest cannot load ‘&lt;some-url&gt;’. No ‘Access-Control-Allow-Origin’ header is present on the requested resource. Origin ‘&lt;my-url&gt;’ is therefore not allowed access.</span></strong></p>
<p>经过搜索发现是因为跨域调用问题（即从一个域名请求另外一个域名下的信息，至少在Chrome中是禁止的）</p>
<p>解决该问题的方法如错误提示信息所示，在服务器端的response加入Access-Control-Allow-Origin即可。</p>
<p>网上查出来的很多方法都是通过在GAE的app.yaml文件里面添加来实现的，后面我尝试后发现不管用。</p>
<p>于是经过一番搜索，搜索出了这个：<a href="http://flask.pocoo.org/snippets/56/" target="_blank" rel="noopener">Decorator for the HTTP Access Control</a></p>
<p>为Flask写一个访问修饰器，然后，通过在要控制Access-Control的路由函数前面添加@crossdomain(origin=’*’)来实现发送Access-Control-Allow-Origin头。</p>
<p>首先，我们定义一个如下函数（这个函数内部还有函数哦）：</p>
<p><pre class="lang:python decode:true ">from datetime import timedelta<br>from flask import make_response, request, current_app<br>from functools import update_wrapper</pre></p>
<p>def crossdomain(origin=None, methods=None, headers=None,<br>                max_age=21600, attach_to_all=True,<br>                automatic_options=True):<br>    if methods is not None:<br>        methods = ‘, ‘.join(sorted(x.upper() for x in methods))<br>    if headers is not None and not isinstance(headers, basestring):<br>        headers = ‘, ‘.join(x.upper() for x in headers)<br>    if not isinstance(origin, basestring):<br>        origin = ‘, ‘.join(origin)<br>    if isinstance(max_age, timedelta):<br>        max_age = max_age.total_seconds()</p>
<pre><code>def get_methods():
    if methods is not None:
        return methods

    options_resp = current_app.make_default_options_response()
    return options_resp.headers[&apos;allow&apos;]

def decorator(f):
    def wrapped_function(*args, **kwargs):
        if automatic_options and request.method == &apos;OPTIONS&apos;:
            resp = current_app.make_default_options_response()
        else:
            resp = make_response(f(*args, **kwargs))
        if not attach_to_all and request.method != &apos;OPTIONS&apos;:
            return resp

        h = resp.headers

        h[&apos;Access-Control-Allow-Origin&apos;] = origin
        h[&apos;Access-Control-Allow-Methods&apos;] = get_methods()
        h[&apos;Access-Control-Max-Age&apos;] = str(max_age)
        if headers is not None:
            h[&apos;Access-Control-Allow-Headers&apos;] = headers
        return resp

    f.provide_automatic_options = False
    return update_wrapper(wrapped_function, f)
return decorator&lt;/pre&gt;
</code></pre><p>接着，我们只需要在我们要加入Access-Control-Allow-Origin头的位置添加下面这一句即可：</p>
<p><pre class="lang:python decode:true ">#<br>#<br>@crossdomain(origin=’<em>‘)   # &lt;-添加这句，可以把</em>改为想要允许的域名</pre></p>
<p>#<br>#<br>@app.route(‘/my_service’)<br>@crossdomain(origin=’*’)   #这货的添加位置应该在路由之后<br>def my_service():</p>
<pre><code>#do something&lt;/pre&gt;
</code></pre><p>然后，我们再次调用API，就会发现，没有报这个错误了。</p>
 
    </div>
    <div class="post-foot">
        <div id="disqus_thread"></div>
    </div>
</div>


                </section>
                <footer class="container fixed-690 footer">
    <div>
        <span>Power by <a href="https://hexo.io">Hexo</a></span>
    </div>
    <div>
        <span>Theme <a href="https://github.com/zhengxiaowai/hexo-theme-lessless">lessless</a></span>
    </div>
        
            
<div>
    <span id="hexiangyutest_container_site_pv">
    PV: <span id="busuanzi_value_site_pv"></span>
    </span>
    <span id="busuanzi_container_site_uv">
    UV: <span id="busuanzi_value_site_uv"></span>
    </span>
</div>

        
</footer>
        </div>
        
<script src="/js/jquery-3.2.1.slim.min.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.min.js"></script>


    

    </body>
</html>