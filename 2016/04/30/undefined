<html>
    <!DOCTYPE html>
<html lang="zh">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">

	

	<title>MFC实现对话框上的简单绘图（曲线的绘制） | akakanch</title>
	<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1">
	<link rel="shortcut icon" href="/favicon.ico">	
	<link rel="stylesheet" href="/css/bootstrap.min.css">
	<link rel="stylesheet" href="/css/caomei.css">
	<link rel="stylesheet" href="/css/style.css">
	<script async src="//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"></script>
</head>

    <body>
        <div class="root">
            <div class='topnavs container fixed-690'>
    <nav class="navbar navbar-expand-lg navbar-light">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
            aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                
                    <li class="nav-item">
                        <a class="nav-link" href="/">
                            首页
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/categories">
                            分类
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/archives">
                            归档
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/tags">
                            标签
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a class="nav-link" href="/about">
                            关于
                        </a>
                    </li>
                    
            </ul>
        </div>
    </nav>
</div>
                <section class="container mainbody fixed-690">
                    <div class="post">
    <div class="post-title">
        <h1>
            MFC实现对话框上的简单绘图（曲线的绘制） 
        </h1>

        
        <div class="post-title-views">
            <span id="busuanzi_container_page_pv">
                本文总阅读量 <span id="busuanzi_value_page_pv"></span> 次
            </span>
        </div>
        
    </div>
    <div class="post-content markdown">
        <p>这里我们介绍在MFC对话框上实现的简单绘图如下图所示：</p>
<p>（GIF不动戳大:)）</p>
<p><a href="http://115.159.197.66/wp-content/uploads/2016/04/ezgif-1760387173.gif" target="_blank" rel="noopener"><img src="http://115.159.197.66/wp-content/uploads/2016/04/ezgif-1760387173-300x239.gif" alt="ezgif-1760387173"></a></p>
<p>我们主要响应MFC对话框的以下3个消息：</p>
<p>WM_LBUTTONDOWN</p>
<p>WM_LBUTTONUP</p>
<p>WM_MOUSEMOVE</p>
<h5 id="先说说基本思路："><a href="#先说说基本思路：" class="headerlink" title="先说说基本思路："></a>先说说基本思路：</h5><p>当鼠标左键按下的时候，就在WM_MOUSEMOVE消息函数中处理绘图，在鼠标左键抬起后，就停止绘图。所以我们需要一个全局变量来标记当前鼠标的状态，以便在WM_MOUSEMOVE函数中进行是否绘图的判断。</p>
<p>下面看看WM_LBUTTONDOWN的消息处理函数内容：</p>
<p><pre class="lang:default decode:true ">void CMDDlg::OnLButtonDown(UINT nFlags, CPoint point)<br>{<br>    // TODO: 在此添加消息处理程序代码和/或调用默认值<br>    draw = true;<br>    lbeg = point;</pre></p>
<pre><code>CDialogEx::OnLButtonDown(nFlags, point);
</code></pre><p>}<br>在上面的函数中，我们用draw来标记当前的绘图状态。</p>
<p>lbeg用来标记第一个点的位置（即鼠标按下的点）</p>
<p>接下来处理WM_LBUTTONUP消息：</p>
<p><pre class="lang:default decode:true ">void CMDDlg::OnLButtonUp(UINT nFlags, CPoint point)<br>{<br>    // TODO: 在此添加消息处理程序代码和/或调用默认值<br>    draw = false;<br>    lend = point;</pre></p>
<pre><code>CDialogEx::OnLButtonUp(nFlags, point);
</code></pre><p>}<br>当鼠标左键抬起的我们就把当前绘图状态，即draw的值设置为false</p>
<p>然后是最重要的，WM_MOUSEMOVE：</p>
<p><pre class="lang:default decode:true">void CI::OnMouseMove(UINT nFlags, CPoint point)<br>{<br>    // TODO: 在此添加消息处理程序代码和/或调用默认值<br>    CClientDC dc(this);<br>    CPen pen(PS_SOLID, HEAD.bound, RGB(HEAD.RGB[0], HEAD.RGB[1], HEAD.RGB[2]));<br>    dc.SelectObject(&amp;pen);<br>    if (draw == true)<br>    {<br>        dc.MoveTo(lbeg);<br>        dc.LineTo(point);<br>        lbeg = point;<br>    }<br>    CDialogEx::OnMouseMove(nFlags, point);<br>}</pre><br>上面的代码中，我们定义了一个<strong><span style="color: #0000ff;"><a href="https://msdn.microsoft.com/en-us/library/h45x9s2c.aspx" target="_blank" rel="noopener">CPen变量</a></span></strong>，这个变量用来设置绘图的画笔的粗细，颜色等等。</p>
<p>当我们判断到绘制状态为true的时候，我们就不断的用<span style="color: #0000ff;"><a href="https://msdn.microsoft.com/en-us/library/kchtckce.aspx" target="_blank" rel="noopener">MoveTo</a></span>来将画笔移动到起始点（为了绘制连续的曲线，第一次起始点应该为鼠标左键单击的地方，后面的起始点都为上一次的point值）然后用<span style="color: #0000ff;"><a href="https://msdn.microsoft.com/en-us/library/wzc1344s.aspx" target="_blank" rel="noopener">LineTo</a></span>函数绘制从起点到终点的直线。</p>
<p><strong>*</strong>重要说明**：WM_MOUSEMOVE这个消息不是鼠标一移动就会响应的，它的响应是离散而非连续的。</p>
<p>&nbsp;</p>
 
    </div>
    <div class="post-foot">
        <div id="disqus_thread"></div>
    </div>
</div>


                </section>
                <footer class="container fixed-690 footer">
    <div>
        <span>Power by <a href="https://hexo.io">Hexo</a></span>
    </div>
    <div>
        <span>Theme <a href="https://github.com/zhengxiaowai/hexo-theme-lessless">lessless</a></span>
    </div>
        
            
<div>
    <span id="hexiangyutest_container_site_pv">
    PV: <span id="busuanzi_value_site_pv"></span>
    </span>
    <span id="busuanzi_container_site_uv">
    UV: <span id="busuanzi_value_site_uv"></span>
    </span>
</div>

        
</footer>
        </div>
        
<script src="/js/jquery-3.2.1.slim.min.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.min.js"></script>


    

    </body>
</html>